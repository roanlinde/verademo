name: Release Branch Workflow

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  # This step will build the maven application
  build_app:
    name: Build Application with Maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    #- uses: actions/setup-java@v1
    #  with: 
    #    java-version: 1.8
    #- name: Cache Maven packages
    #  uses: actions/cache@v2
    #  with:
    #    path: ~/.m2
    #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
    #  run: mvn clean package
      run: echo "Building application"

    - uses: actions/upload-artifact@v1
      with:
        name: verademo.war
        path: target/verademo.war


  software-composition-analysis:
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with: 
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - run: curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan . --update-advisor 2>&1 | tee sca_output.txt
      env:
        SRCCLR_API_TOKEN: ${{secrets.SRCCLR_API_TOKEN}}
    - uses: actions/upload-artifact@v1
      with:
        name: SCAScanResults
        path: sca_output.txt

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: build_app
    
    steps:
      - name: Check out main branch
        uses: actions/checkout@v2
          
      - name: Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          appname: 'verademo_github'
          createprofile: false
          filepath: 'target/verademo.war'
          vid: '${{secrets.VID}}'
          vkey: '${{secrets.VKEY}}'

  create_sbom:
    name: Generate SBOM file
    runs-on: ubuntu-latest
    needs: software-composition-analysis
    container:
      image: docker://wasptree/veracode-sbom:latest
    steps:
      - name: Store API credentials for HMAC Signing
        run: | 
          mkdir ~/.veracode
          cat > ~/.veracode/credentials << EOF
          [default]
          veracode_api_key_id = ${{secrets.VID}}
          veracode_api_key_secret = ${{secrets.VKEY}}
          EOF
      - name: Generate SBOM
        run: |
          GUID=$(http --auth-type=veracode_hmac GET https://api.veracode.com/appsec/v1/applications?name=verademo_github | jq -r '._embedded.applications[0].guid')
          http --auth-type=veracode_hmac GET https://api.veracode.com/srcclr/sbom/v1/targets/$GUID/cyclonedx?type=application > verademo_github_sbom.json
          stat verademo_github_sbom.json && head verademo_github_sbom.json  
      - uses: actions/upload-artifact@v1
        with:
          name: verademo_github_sbom
          path: verademo_github_sbom.json

  build_container:
    name: Build Application Into Docker Container
    needs: static_analysis
    runs-on: ubuntu-latest
    steps:
      - name: Build new container image
        run: echo "built new container"
  
  scan_container:
    name: Scan Built Container Image
    runs-on: ubuntu-latest
    needs: build_container
    steps:
    - uses: actions/checkout@v2
    - run: curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan --image wasptree/vampi | tee sca_container_output.txt
      env:
        SRCCLR_API_TOKEN: ${{secrets.SRCCLR_API_TOKEN}}
    - uses: actions/upload-artifact@v1
      with:
        name: SCAContainerResults
        path: sca_container_output.txt
        
  Veracode-container_iac_secrets-scan:
    runs-on: ubuntu-latest
    name: Verracode Container/IaC/Secrets scan

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Verracode Container/IaC/Secrets action step
        uses: veracode/veracode-container-scanning-action@main
        with:
          vid: ${{ secrets.VID }}
          vkey: ${{ secrets.VKEY }}
          command: "scan" 
          type: "directory"
          source: "./"
          format: "json"
          debug: true
          fail_build: true

  deploy_application:
    name: Deploy Application To Testing Environment
    runs-on: ubuntu-latest
    needs: scan_container
    steps:
      - name: Deploy docker image to staging environment
        run: echo "Docker container deployed to staging"

  start_dast_scan:
    name: Start DAST Scan On Testing
    needs: deploy_application
    runs-on: ubuntu-latest
    container:
      image: docker://wasptree/veracode-dast-trigger:latest
    steps: 
      - name: Trigger the dast scan
        run: veracode-dast-trigger -vid ${{secrets.VID}} -vkey ${{secrets.VKEY}}  -scan verademo_web
